/* Copyright (c) <2003-2011> <Julio Jerez, Newton Game Dynamics>
* 
* This software is provided 'as-is', without any express or implied
* warranty. In no event will the authors be held liable for any damages
* arising from the use of this software.
* 
* Permission is granted to anyone to use this software for any purpose,
* including commercial applications, and to alter it and redistribute it
* freely, subject to the following restrictions:
* 
* 1. The origin of this software must not be misrepresented; you must not
* claim that you wrote the original software. If you use this software
* in a product, an acknowledgment in the product documentation would be
* appreciated but is not required.
* 
* 2. Altered source versions must be plainly marked as such, and must not be
* misrepresented as being the original software.
* 
* 3. This notice may not be removed or altered from any source distribution.
*/
module derelict.newton.functions;

import derelict.newton.types;

extern(C) @nogc nothrow
{
	alias da_NewtonWorldGetVersion = int function();
	alias da_NewtonWorlfloatSize = int function();
	alias da_NewtonGetMemoryUsed = int function();
	alias da_NewtonSetMemorySystem = void function(NewtonAllocMemory malloc ,NewtonFreeMemory free);
	alias da_NewtonCreate = NewtonWorld* function();
	alias da_NewtonDestroy = void function(const NewtonWorld* newtonWorld);
	alias da_NewtonDestroyAllBodies = void function(const NewtonWorld* newtonWorld);
	alias da_NewtonEnumrateDevices = int function(const NewtonWorld* newtonWorld);
	alias da_NewtonGetCurrentDevice = int function(const NewtonWorld* newtonWorld);
	alias da_NewtonSetCurrentDevice = void function(const NewtonWorld* newtonWorld ,int deviceIndex);
	alias da_NewtonGetDeviceString = void function(const NewtonWorld* newtonWorld ,int deviceIndex ,const char* vendorString ,int maxSize);
	alias da_NewtonInvalidateCache = void function(const NewtonWorld* newtonWorld);
	alias da_NewtonSetSolverModel = void function(const NewtonWorld* newtonWorld ,int model);
	alias da_NewtonSetMultiThreadSolverOnSingleIsland = void function(const NewtonWorld* newtonWorld ,int mode);
	alias da_NewtonGetMultiThreadSolverOnSingleIsland = int function(const NewtonWorld* newtonWorld);
	alias da_NewtonSetPerformanceClock = void function(const NewtonWorld* newtonWorld ,NewtonGetTicksCountCallback callback);
	alias da_NewtonReadPerformanceTicks = uint function(const NewtonWorld* newtonWorld ,uint performanceEntry);
	alias da_NewtonGetBroadphaseAlgorithm = int function(const NewtonWorld* newtonWorld);
	alias da_NewtonSelectBroadphaseAlgorithm = void function(const NewtonWorld* newtonWorld ,int algorithmType);
	alias da_NewtonUpdate = void function(const NewtonWorld* newtonWorld ,float timestep);
	alias da_NewtonUpdateAsync = void function(const NewtonWorld* newtonWorld ,float timestep);
	alias da_NewtonWaitForUpdateToFinish = void function(const NewtonWorld* newtonWorld);
	alias da_NewtonSerializeToFile = void function(const NewtonWorld* newtonWorld ,const char* filename);
	alias da_NewtonSerializeBodyArray = void function(const NewtonWorld* newtonWorld ,const NewtonBody** body_Array ,int body_Count ,NewtonOnBodySerializationCallback serializeBody ,NewtonSerializeCallback serializeFunction ,const void* serializeHandle);
	alias da_NewtonDeserializeBodyArray = void function(const NewtonWorld* newtonWorld ,NewtonOnBodyDeserializationCallback deserializeBody ,NewtonDeserializeCallback serializeFunction ,const void* serializeHandle);
	alias da_NewtonReadThreadPerformanceTicks = uint function(NewtonWorld* newtonWorld ,uint threadIndex);
	alias da_NewtonWorldCriticalSectionLock = void function(const NewtonWorld* newtonWorld ,int threadIndex);
	alias da_NewtonWorldCriticalSectionUnlock = void function(const NewtonWorld* newtonWorld);
	alias da_NewtonSetThreadsCount = void function(const NewtonWorld* newtonWorld ,int threads);
	alias da_NewtonGetThreadsCount = int function(const NewtonWorld* newtonWorld);
	alias da_NewtonGetMaxThreadsCount = int function(const NewtonWorld* newtonWorld);
	alias da_NewtonDispachThreadJob = void function(const NewtonWorld* newtonWorld ,NewtonJobTask task ,const void* usedData);
	alias da_NewtonSyncThreadJobs = void function(const NewtonWorld* newtonWorld);
	alias da_NewtonAtomicAdd = int function(const int* ptr ,int value);
	alias da_NewtonAtomicSwap = int function(const int* ptr ,int value);
	alias da_NewtonYield = void function();
	alias da_NewtonSetFrictionModel = void function(const NewtonWorld* newtonWorld ,int model);
	alias da_NewtonSetMinimumFrameRate = void function(const NewtonWorld* newtonWorld ,float frameRate);
	alias da_NewtonSetBodyLeaveWorldEvent = void function(const NewtonWorld* newtonWorld ,NewtonBodyLeaveWorld callback);
	alias da_NewtonSetIslandUpdateEvent = void function(const NewtonWorld* newtonWorld ,NewtonIslandUpdate islandUpdate);
	alias da_NewtonSetDestroyBodyByExeciveForce = void function(const NewtonWorld* newtonWorld ,NewtonDestroyBodyByExeciveForce callback);
	alias da_NewtonWorldForEachJointDo = void function(const NewtonWorld* newtonWorld ,NewtonJointIterator callback ,const void* userData);
	alias da_NewtonWorldForEachBodyInAABBDo = void function(const NewtonWorld* newtonWorld ,const float* p0 ,const float* p1 ,NewtonBodyIterator callback ,const void* userData);
	alias da_NewtonWorldSetUserData = void function(const NewtonWorld* newtonWorld ,const void* userData);
	alias da_NewtonWorldGetUserData = void* function(const NewtonWorld* newtonWorld);
	alias da_NewtonWorldGetListenerUserData = void* function(const NewtonWorld* newtonWorld ,const void* listener);
	alias da_NewtonWorldGetPreListener = void* function(const NewtonWorld* newtonWorld ,const char* nameId);
	alias da_NewtonWorldAddPreListener = void* function(const NewtonWorld* newtonWorld ,const char* nameId ,const void* listenerUserData ,NewtonWorldUpdateListenerCallback update ,NewtonWorldDestroyListenerCallback destroy);
	alias da_NewtonWorldGetPostListener = void* function(const NewtonWorld* newtonWorld ,const char* nameId);
	alias da_NewtonWorldAddPostListener = void* function(const NewtonWorld* newtonWorld ,const char* nameId ,const void* listenerUserData ,NewtonWorldUpdateListenerCallback update ,NewtonWorldDestroyListenerCallback destroy);
	alias da_NewtonWorldSetDestructorCallback = void function(const NewtonWorld* newtonWorld ,NewtonWorldDestructorCallback destructor);
	alias da_NewtonWorldGetDestructorCallback = NewtonWorldDestructorCallback function(const NewtonWorld* newtonWorld);
	alias da_NewtonWorldRayCast = void function(const NewtonWorld* newtonWorld ,const float* p0 ,const float* p1 ,NewtonWorldRayFilterCallback filter ,const void* userData ,NewtonWorldRayPrefilterCallback prefilter);
	alias da_NewtonWorldCollide = int function(const NewtonWorld* newtonWorld ,const float* matrix ,const NewtonCollision* shape ,const void* userData ,NewtonWorldRayPrefilterCallback prefilter ,const NewtonWorldConvexCastReturnInfo* info ,int maxContactsCount ,int threadIndex);
	alias da_NewtonWorldConvexCast = int function(const NewtonWorld* newtonWorld ,const float* matrix ,const float* target ,const NewtonCollision* shape ,const float* hitParam ,const void* userData ,NewtonWorldRayPrefilterCallback prefilter ,const NewtonWorldConvexCastReturnInfo* info ,int maxContactsCount ,int threadIndex);
	alias da_NewtonWorldGetBodyCount = int function(const NewtonWorld* newtonWorld);
	alias da_NewtonWorldGetConstraintCount = int function(const NewtonWorld* newtonWorld);
	alias da_NewtonIslandGetBody = NewtonBody* function(const void* island ,int body_Index);
	alias da_NewtonIslandGetBodyAABB = void function(const void* island ,int body_Index ,const float* p0 ,const float* p1);
	alias da_NewtonMaterialCreateGroupID = int function(const NewtonWorld* newtonWorld);
	alias da_NewtonMaterialGetDefaultGroupID = int function(const NewtonWorld* newtonWorld);
	alias da_NewtonMaterialDestroyAllGroupID = void function(const NewtonWorld* newtonWorld);
	alias da_NewtonMaterialGetUserData = void* function(const NewtonWorld* newtonWorld ,int id0 ,int id1);
	alias da_NewtonMaterialSetSurfaceThickness = void function(const NewtonWorld* newtonWorld ,int id0 ,int id1 ,float thickness);
	alias da_NewtonMaterialSetCollisionCallback = void function(const NewtonWorld* newtonWorld ,int id0 ,int id1 ,const void* userData ,NewtonOnAABBOverlap aabbOverlap ,NewtonContactsProcess process);
	alias da_NewtonMaterialSetDefaultSoftness = void function(const NewtonWorld* newtonWorld ,int id0 ,int id1 ,float value);
	alias da_NewtonMaterialSetDefaultElasticity = void function(const NewtonWorld* newtonWorld ,int id0 ,int id1 ,float elasticCoef);
	alias da_NewtonMaterialSetDefaultCollidable = void function(const NewtonWorld* newtonWorld ,int id0 ,int id1 ,int state);
	alias da_NewtonMaterialSetDefaultFriction = void function(const NewtonWorld* newtonWorld ,int id0 ,int id1 ,float staticFriction ,float kineticFriction);
	alias da_NewtonWorldGetFirstMaterial = NewtonMaterial* function(const NewtonWorld* newtonWorld);
	alias da_NewtonWorldGetNextMaterial = NewtonMaterial* function(const NewtonWorld* newtonWorld ,const NewtonMaterial* material);
	alias da_NewtonWorldGetFirstBody = NewtonBody* function(const NewtonWorld* newtonWorld);
	alias da_NewtonWorldGetNextBody = NewtonBody* function(const NewtonWorld* newtonWorld ,const NewtonBody* curBody);
	alias da_NewtonMaterialGetMaterialPairUserData = void* function(const NewtonMaterial* material);
	alias da_NewtonMaterialGetContactFaceAttribute = uint function(const NewtonMaterial* material);
	alias da_NewtonMaterialGetBodyCollidingShape = NewtonCollision* function(const NewtonMaterial* material ,const NewtonBody* body_);
	alias da_NewtonMaterialGetContactNormalSpeed = float function(const NewtonMaterial* material);
	alias da_NewtonMaterialGetContactForce = void function(const NewtonMaterial* material ,const NewtonBody* body_ ,const float* force);
	alias da_NewtonMaterialGetContactPositionAndNormal = void function(const NewtonMaterial* material ,const NewtonBody* body_ ,const float* posit ,const float* normal);
	alias da_NewtonMaterialGetContactTangentDirections = void function(const NewtonMaterial* material ,const NewtonBody* body_ ,const float* dir0 ,const float* dir1);
	alias da_NewtonMaterialGetContactTangentSpeed = float function(const NewtonMaterial* material ,int index);
	alias da_NewtonMaterialSetContactSoftness = void function(const NewtonMaterial* material ,float softness);
	alias da_NewtonMaterialSetContactElasticity = void function(const NewtonMaterial* material ,float restitution);
	alias da_NewtonMaterialSetContactFrictionState = void function(const NewtonMaterial* material ,int state ,int index);
	alias da_NewtonMaterialSetContactFrictionCoef = void function(const NewtonMaterial* material ,float staticFrictionCoef ,float kineticFrictionCoef ,int index);
	alias da_NewtonMaterialSetContactNormalAcceleration = void function(const NewtonMaterial* material ,float accel);
	alias da_NewtonMaterialSetContactNormalDirection = void function(const NewtonMaterial* material ,const float* directionVector);
	alias da_NewtonMaterialSetContactTangentAcceleration = void function(const NewtonMaterial* material ,float accel ,int index);
	alias da_NewtonMaterialContactRotateTangentDirections = void function(const NewtonMaterial* material ,const float* directionVector);
	alias da_NewtonCreateNull = NewtonCollision* function(const NewtonWorld* newtonWorld);
	alias da_NewtonCreateSphere = NewtonCollision* function(const NewtonWorld* newtonWorld ,float radius ,int shapeID ,const float* offsetMatrix);
	alias da_NewtonCreateBox = NewtonCollision* function(const NewtonWorld* newtonWorld ,float dx ,float dy ,float dz ,int shapeID ,const float* offsetMatrix);
	alias da_NewtonCreateCone = NewtonCollision* function(const NewtonWorld* newtonWorld ,float radius ,float height ,int shapeID ,const float* offsetMatrix);
	alias da_NewtonCreateCapsule = NewtonCollision* function(const NewtonWorld* newtonWorld ,float radius ,float height ,int shapeID ,const float* offsetMatrix);
	alias da_NewtonCreateCylinder = NewtonCollision* function(const NewtonWorld* newtonWorld ,float radius ,float height ,int shapeID ,const float* offsetMatrix);
	alias da_NewtonCreateTaperedCapsule = NewtonCollision* function(const NewtonWorld* newtonWorld ,float radio0 ,float radio1 ,float height ,int shapeID ,const float* offsetMatrix);
	alias da_NewtonCreateTaperedCylinder = NewtonCollision* function(const NewtonWorld* newtonWorld ,float radio0 ,float radio1 ,float height ,int shapeID ,const float* offsetMatrix);
	alias da_NewtonCreateChamferCylinder = NewtonCollision* function(const NewtonWorld* newtonWorld ,float radius ,float height ,int shapeID ,const float* offsetMatrix);
	alias da_NewtonCreateConvexHull = NewtonCollision* function(const NewtonWorld* newtonWorld ,int count ,const float* vertexCloud ,int strideInBytes ,float tolerance ,int shapeID ,const float* offsetMatrix);
	alias da_NewtonCreateConvexHullFromMesh = NewtonCollision* function(const NewtonWorld* newtonWorld ,const NewtonMesh* mesh ,float tolerance ,int shapeID);
	alias da_NewtonCollisionGetMode = int function(const NewtonCollision* convexCollision);
	alias da_NewtonCollisionSetCollisonMode = void function(NewtonCollision* convexCollision ,int mode);
	alias da_NewtonConvexHullGetFaceIndices = int function(const NewtonCollision* convexHullCollision ,int face ,const int* faceIndices);
	alias da_NewtonConvexCollisionCalculateVolume = float function(const NewtonCollision* convexCollision);
	alias da_NewtonConvexCollisionCalculateInertialMatrix = void function(NewtonCollision* convexCollision ,const float* inertia ,const float* origin);
	alias da_NewtonCreateCompoundCollision = NewtonCollision* function(const NewtonWorld* newtonWorld ,int shapeID);
	alias da_NewtonCreateCompoundCollisionFromMesh = NewtonCollision* function(const NewtonWorld* newtonWorld ,const NewtonMesh* mesh ,float hullTolerance ,int shapeID ,int subShapeID);
	alias da_NewtonCompoundCollisionBeginAddRemove = void function(const NewtonCollision* compoundCollision);
	alias da_NewtonCompoundCollisionAddSubCollision = void* function(const NewtonCollision* compoundCollision ,const NewtonCollision* convexCollision);
	alias da_NewtonCompoundCollisionRemoveSubCollision = void function(const NewtonCollision* compoundCollision ,const void* collisionNode);
	alias da_NewtonCompoundCollisionRemoveSubCollisionByIndex = void function(const NewtonCollision* compoundCollision ,int nodeIndex);
	alias da_NewtonCompoundCollisionSetSubCollisionMatrix = void function(const NewtonCollision* compoundCollision ,const void* node ,const float* matrix);
	alias da_NewtonCompoundCollisionEndAddRemove = void function(const NewtonCollision* compoundCollision);
	alias da_NewtonCompoundCollisionGetFirstNode = void* function(const NewtonCollision* compoundCollision);
	alias da_NewtonCompoundCollisionGetNextNode = void* function(const NewtonCollision* compoundCollision ,const void* node);
	alias da_NewtonCompoundCollisionGetNodeByIndex = void* function(const NewtonCollision* compoundCollision ,int index);
	alias da_NewtonCompoundCollisionGetNodeIndex = int function(const NewtonCollision* compoundCollision ,const void* node);
	alias da_NewtonCompoundCollisionGetCollisionFromNode = NewtonCollision* function(const NewtonCollision* compoundCollision ,const void* node);
	alias da_NewtonCreateSceneCollision = NewtonCollision* function(const NewtonWorld* newtonWorld ,int shapeID);
	alias da_NewtonSceneCollisionBeginAddRemove = void function(const NewtonCollision* sceneCollision);
	alias da_NewtonSceneCollisionAddSubCollision = void* function(const NewtonCollision* sceneCollision ,const NewtonCollision* collision);
	alias da_NewtonSceneCollisionSetSubCollisionMatrix = void function(const NewtonCollision* sceneCollision ,const void* node ,const float* matrix);
	alias da_NewtonSceneCollisionEndAddRemove = void function(const NewtonCollision* sceneCollision);
	alias da_NewtonSceneCollisionGetFirstNode = void* function(const NewtonCollision* sceneCollision);
	alias da_NewtonSceneCollisionGetNextNode = void* function(const NewtonCollision* sceneCollision ,const void* node);
	alias da_NewtonSceneCollisionGetCollisionFromNode = NewtonCollision* function(const NewtonCollision* sceneCollision ,const void* node);
	alias da_NewtonCreateUserMeshCollision = NewtonCollision* function(const NewtonWorld* newtonWorld ,const float* minBox ,const float* maxBox ,const void* userData ,NewtonUserMeshCollisionCollideCallback collideCallback ,NewtonUserMeshCollisionRayHitCallback rayHitCallback ,NewtonUserMeshCollisionDestroyCallback destroyCallback ,NewtonUserMeshCollisionGetCollisionInfo getInfoCallback ,NewtonUserMeshCollisionAABBTest getLocalAABBCallback ,NewtonUserMeshCollisionGetFacesInAABB facesInAABBCallback ,NewtonOnUserCollisionSerializationCallback serializeCallback ,int shapeID);
	alias da_NewtonCreateCollisionFromSerialization = NewtonCollision* function(const NewtonWorld* newtonWorld ,NewtonDeserializeCallback deserializeFunction ,const void* serializeHandle);
	alias da_NewtonCollisionSerialize = void function(const NewtonWorld* newtonWorld ,const NewtonCollision* collision ,NewtonSerializeCallback serializeFunction ,const void* serializeHandle);
	alias da_NewtonCollisionGetInfo = void function(const NewtonCollision* collision ,const NewtonCollisionInfoRecord* collisionInfo);
	alias da_NewtonCreateHeightFieldCollision = NewtonCollision* function(const NewtonWorld* newtonWorld ,int width ,int height ,int gridsDiagonals ,const float* elevationMap ,const char* attributeMap ,float horizontalScale ,int shapeID);
	alias da_NewtonHeightFieldSetUserRayCastCallback = void function(const NewtonCollision* hightfieldCollision ,NewtonHeightFieldRayCastCallback rayHitCallback);
	alias da_NewtonCreateTreeCollision = NewtonCollision* function(const NewtonWorld* newtonWorld ,int shapeID);
	alias da_NewtonCreateTreeCollisionFromMesh = NewtonCollision* function(const NewtonWorld* newtonWorld ,const NewtonMesh* mesh ,int shapeID);
	alias da_NewtonTreeCollisionSetUserRayCastCallback = void function(const NewtonCollision* treeCollision ,NewtonCollisionTreeRayCastCallback rayHitCallback);
	alias da_NewtonTreeCollisionBeginBuild = void function(NewtonCollision* treeCollision);
	alias da_NewtonTreeCollisionAddFace = void function(const NewtonCollision* treeCollision ,int vertexCount ,const float* vertexPtr ,int strideInBytes ,int faceAttribute);
	alias da_NewtonTreeCollisionEndBuild = void function(const NewtonCollision* treeCollision ,int optimize);
	alias da_NewtonTreeCollisionGetFaceAtribute = int function(const NewtonCollision* treeCollision ,const int* faceIndexArray ,int indexCount);
	alias da_NewtonTreeCollisionSetFaceAtribute = void function(const NewtonCollision* treeCollision ,const int* faceIndexArray ,int indexCount ,int attribute);
	alias da_NewtonTreeCollisionGetVertexListIndexListInAABB = int function(const NewtonCollision* treeCollision ,const float* p0 ,const float* p1 ,const float** vertexArray ,const int* vertexCount ,const int* vertexStrideInBytes ,const int* indexList ,int maxIndexCount ,const int* faceAttribute);
	alias da_NewtonStaticCollisionSetDebugCallback = void function(const NewtonCollision* staticCollision ,NewtonTreeCollisionCallback userCallback);
	alias da_NewtonCollisionCreateInstance = NewtonCollision* function(const NewtonCollision* collision);
	alias da_NewtonCollisionGetType = int function(const NewtonCollision* collision);
	alias da_NewtonCollisionSetUserData = void function(const NewtonCollision* collision ,const void* userData);
	alias da_NewtonCollisionGetUserData = void* function(const NewtonCollision* collision);
	alias da_NewtonCollisionSetUserID = void function(const NewtonCollision* collision ,uint id);
	alias da_NewtonCollisionGetUserID = uint function(const NewtonCollision* collision);
	alias da_NewtonCollisionSetMatrix = void function(const NewtonCollision* collision ,const float* matrix);
	alias da_NewtonCollisionGetMatrix = void function(const NewtonCollision* collision ,const float* matrix);
	alias da_NewtonCollisionSetScale = void function(const NewtonCollision* collision ,float scaleX ,float scaleY ,float scaleZ);
	alias da_NewtonCollisionGetScale = void function(const NewtonCollision* collision ,const float* scaleX ,const float* scaleY ,const float* scaleZ);
	alias da_NewtonDestroyCollision = void function(const NewtonCollision* collision);
	alias da_NewtonCollisionPointDistance = int function(const NewtonWorld* newtonWorld ,const float* point ,const NewtonCollision* collision ,const float* matrix ,const float* contact ,const float* normal ,int threadIndex);
	alias da_NewtonCollisionClosestPoint = int function(const NewtonWorld* newtonWorld ,const NewtonCollision* collisionA ,const float* matrixA ,const NewtonCollision* collisionB ,const float* matrixB ,const float* contactA ,const float* contactB ,const float* normalAB ,int threadIndex);
	alias da_NewtonCollisionCollide = int function(const NewtonWorld* newtonWorld ,int maxSize ,const NewtonCollision* collisionA ,const float* matrixA ,const NewtonCollision* collisionB ,const float* matrixB ,const float* contacts ,const float* normals ,const float* penetration ,const int* attribute ,int threadIndex);
	alias da_NewtonCollisionCollideContinue = int function(const NewtonWorld* newtonWorld ,int maxSize ,float timestep ,const NewtonCollision* collisionA ,const float* matrixA ,const float* velocA ,float* omegaA ,const NewtonCollision* collisionB ,const float* matrixB ,const float* velocB ,const float* omegaB ,const float* timeOfImpact ,const float* contacts ,const float* normals ,const float* penetration ,int threadIndex);
	alias da_NewtonCollisionSupportVertex = void function(const NewtonCollision* collision ,const float* dir ,const float* vertex);
	alias da_NewtonCollisionRayCast = float function(const NewtonCollision* collision ,const float* p0 ,const float* p1 ,const float* normal ,const int* attribute);
	alias da_NewtonCollisionCalculateAABB = void function(const NewtonCollision* collision ,const float* matrix ,const float* p0 ,const float* p1);
	alias da_NewtonCollisionForEachPolygonDo = void function(const NewtonCollision* collision ,const float* matrix ,NewtonCollisionIterator callback ,const void* userData);
	alias da_NewtonGetEulerAngle = void function(const float* matrix ,const float* eulersAngles);
	alias da_NewtonSetEulerAngle = void function(const float* eulersAngles ,const float* matrix);
	alias da_NewtonCalculateSpringDamperAcceleration = float function(float dt ,float ks ,float x ,float kd ,float s);
	alias da_NewtonCreateDynamicBody = NewtonBody* function(const NewtonWorld* newtonWorld ,const NewtonCollision* collision ,const float* matrix);
	alias da_NewtonCreateKinematicBody = NewtonBody* function(const NewtonWorld* newtonWorld ,const NewtonCollision* collision ,const float* matrix);
	alias da_NewtonDestroyBody = void function(const NewtonWorld* newtonWorld ,const NewtonBody* body_);
	alias da_NewtonBodyGetType = int function(const NewtonBody* body_);
	alias da_NewtonBodyAddForce = void function(const NewtonBody* body_ ,const float* force);
	alias da_NewtonBodyAddTorque = void function(const NewtonBody* body_ ,const float* torque);
	alias da_NewtonBodyCalculateInverseDynamicsForce = void function(const NewtonBody* body_ ,float timestep ,const float* desiredVeloc ,const float* forceOut);
	alias da_NewtonBodySetCentreOfMass = void function(const NewtonBody* body_ ,const float* com);
	alias da_NewtonBodySetMassMatrix___ = void function(const NewtonBody* body_ ,float mass ,float Ixx ,float Iyy ,float Izz);
	alias da_NewtonBodySetMassProperties = void function(const NewtonBody* body_ ,float mass ,const NewtonCollision* collision);
	alias da_NewtonBodySetMatrix = void function(const NewtonBody* body_ ,const float* matrix);
	alias da_NewtonBodySetMatrixRecursive = void function(const NewtonBody* body_ ,const float* matrix);
	alias da_NewtonBodySetMaterialGroupID = void function(const NewtonBody* body_ ,int id);
	alias da_NewtonBodySetContinuousCollisionMode = void function(const NewtonBody* body_ ,uint state);
	alias da_NewtonBodySetJointRecursiveCollision = void function(const NewtonBody* body_ ,uint state);
	alias da_NewtonBodySetOmega = void function(const NewtonBody* body_ ,const float* omega);
	alias da_NewtonBodySetVelocity = void function(const NewtonBody* body_ ,const float* velocity);
	alias da_NewtonBodySetForce = void function(const NewtonBody* body_ ,const float* force);
	alias da_NewtonBodySetTorque = void function(const NewtonBody* body_ ,const float* torque);
	alias da_NewtonBodySetLinearDamping = void function(const NewtonBody* body_ ,float linearDamp);
	alias da_NewtonBodySetAngularDamping = void function(const NewtonBody* body_ ,const float* angularDamp);
	alias da_NewtonBodySetCollision = void function(const NewtonBody* body_ ,const NewtonCollision* collision);
	alias da_NewtonBodySetCollisionScale = void function(const NewtonBody* body_ ,float scaleX ,float scaleY ,float scaleZ);
	alias da_NewtonBodyGetSleepState = int function(const NewtonBody* body_);
	alias da_NewtonBodySetSleepState = void function(const NewtonBody* body_ ,int state);
	alias da_NewtonBodyGetAutoSleep = int function(const NewtonBody* body_);
	alias da_NewtonBodySetAutoSleep = void function(const NewtonBody* body_ ,int state);
	alias da_NewtonBodyGetFreezeState = int function(const NewtonBody* body_);
	alias da_NewtonBodySetFreezeState = void function(const NewtonBody* body_ ,int state);
	alias da_NewtonBodySetDestructorCallback = void function(const NewtonBody* body_ ,NewtonBodyDestructor callback);
	alias da_NewtonBodyGetDestructorCallback = NewtonBodyDestructor function(const NewtonBody* body_);
	alias da_NewtonBodySetTransformCallback = void function(const NewtonBody* body_ ,NewtonSetTransform callback);
	alias da_NewtonBodyGetTransformCallback = NewtonSetTransform function(const NewtonBody* body_);
	alias da_NewtonBodySetForceAndTorqueCallback = void function(const NewtonBody* body_ ,NewtonApplyForceAndTorque callback);
	alias da_NewtonBodyGetForceAndTorqueCallback = NewtonApplyForceAndTorque function(const NewtonBody* body_);
	alias da_NewtonBodyGetID = int function(const NewtonBody* body_);
	alias da_NewtonBodySetUserData = void function(const NewtonBody* body_ ,const void* userData);
	alias da_NewtonBodyGetUserData = void* function(const NewtonBody* body_);
	alias da_NewtonBodyGetWorld = NewtonWorld* function(const NewtonBody* body_);
	alias da_NewtonBodyGetCollision = NewtonCollision* function(const NewtonBody* body_);
	alias da_NewtonBodyGetMaterialGroupID = int function(const NewtonBody* body_);
	alias da_NewtonBodyGetContinuousCollisionMode = int function(const NewtonBody* body_);
	alias da_NewtonBodyGetJointRecursiveCollision = int function(const NewtonBody* body_);
	alias da_NewtonBodyGetMatrix = void function(const NewtonBody* body_ ,const float* matrix);
	alias da_NewtonBodyGetRotation = void function(const NewtonBody* body_ ,const float* rotation);
	alias da_NewtonBodyGetMassMatrix = void function(const NewtonBody* body_ ,float* mass ,const float* Ixx ,const float* Iyy ,const float* Izz);
	alias da_NewtonBodyGetInvMass = void function(const NewtonBody* body_ ,const float* invMass ,const float* invIxx ,const float* invIyy ,const float* invIzz);
	alias da_NewtonBodyGetInertiaMatrix = void function(const NewtonBody* body_ ,const float* inertiaMatrix);
	alias da_NewtonBodyGetInvInertiaMatrix = void function(const NewtonBody* body_ ,const float* invInertiaMatrix);
	alias da_NewtonBodyGetOmega = void function(const NewtonBody* body_ ,const float* vector);
	alias da_NewtonBodyGetVelocity = void function(const NewtonBody* body_ ,const float* vector);
	alias da_NewtonBodyGetForce = void function(const NewtonBody* body_ ,const float* vector);
	alias da_NewtonBodyGetTorque = void function(const NewtonBody* body_ ,const float* vector);
	alias da_NewtonBodyGetForceAcc = void function(const NewtonBody* body_ ,const float* vector);
	alias da_NewtonBodyGetTorqueAcc = void function(const NewtonBody* body_ ,const float* vector);
	alias da_NewtonBodyGetCentreOfMass = void function(const NewtonBody* body_ ,const float* com);
	alias da_NewtonBodyGetPointVelocity = void function(const NewtonBody* body_ ,const float* point ,const float* velocOut);
	alias da_NewtonBodyAddImpulse = void function(const NewtonBody* body_ ,const float* pointDeltaVeloc ,const float* pointPosit);
	alias da_NewtonBodyApplyImpulseArray = void function(const NewtonBody* body_ ,int impuleCount ,int strideInByte ,const float* impulseArray ,const float* pointArray);
	alias da_NewtonBodyApplyImpulsePair = void function(const NewtonBody* body_ ,const float* linearImpulse ,const float* angularImpulse);
	alias da_NewtonBodyIntegrateVelocity = void function(const NewtonBody* body_ ,float timestep);
	alias da_NewtonBodyGetLinearDamping = float function(const NewtonBody* body_);
	alias da_NewtonBodyGetAngularDamping = void function(const NewtonBody* body_ ,const float* vector);
	alias da_NewtonBodyGetAABB = void function(const NewtonBody* body_ ,const float* p0 ,const float* p1);
	alias da_NewtonBodyGetFirstJoint = NewtonJoint* function(const NewtonBody* body_);
	alias da_NewtonBodyGetNextJoint = NewtonJoint* function(const NewtonBody* body_ ,const NewtonJoint* joint);
	alias da_NewtonBodyGetFirstContactJoint = NewtonJoint* function(const NewtonBody* body_);
	alias da_NewtonBodyGetNextContactJoint = NewtonJoint* function(const NewtonBody* body_ ,const NewtonJoint* contactJoint);
	alias da_NewtonBodyAddBuoyancyForce = void function(const NewtonBody* body_ ,float fluidDensity ,float fluidLinearViscosity ,float fluidAngularViscosity ,const float* gravityVector ,NewtonGetBuoyancyPlane buoyancyPlane ,const void* context);
	alias da_NewtonContactJointGetFirstContact = void* function(const NewtonJoint* contactJoint);
	alias da_NewtonContactJointGetNextContact = void* function(const NewtonJoint* contactJoint ,const void* contact);
	alias da_NewtonContactJointGetContactCount = int function(const NewtonJoint* contactJoint);
	alias da_NewtonContactJointRemoveContact = void function(const NewtonJoint* contactJoint ,const void* contact);
	alias da_NewtonContactGetMaterial = NewtonMaterial* function(const void* contact);
	alias da_NewtonJointGetUserData = void* function(const NewtonJoint* joint);
	alias da_NewtonJointSetUserData = void function(const NewtonJoint* joint ,const void* userData);
	alias da_NewtonJointGetBody0 = NewtonBody* function(const NewtonJoint* joint);
	alias da_NewtonJointGetBody1 = NewtonBody* function(const NewtonJoint* joint);
	alias da_NewtonJointGetInfo = void function(const NewtonJoint* joint ,const NewtonJointRecord* info);
	alias da_NewtonJointGetCollisionState = int function(const NewtonJoint* joint);
	alias da_NewtonJointSetCollisionState = void function(const NewtonJoint* joint ,int state);
	alias da_NewtonJointGetStiffness = float function(const NewtonJoint* joint);
	alias da_NewtonJointSetStiffness = void function(const NewtonJoint* joint ,float state);
	alias da_NewtonDestroyJoint = void function(const NewtonWorld* newtonWorld ,const NewtonJoint* joint);
	alias da_NewtonJointSetDestructor = void function(const NewtonJoint* joint ,NewtonConstraintDestructor destructor);
	alias da_NewtonCreateDeformableMesh = NewtonCollision* function(const NewtonWorld* newtonWorld ,const NewtonMesh* mesh ,int shapeID);
	alias da_NewtonDeformableMeshSetPlasticity = void function(const NewtonCollision* deformableMesh ,float plasticity);
	alias da_NewtonDeformableMeshSetStiffness = void function(const NewtonCollision* deformableMesh ,float stiffness);
	alias da_NewtonDeformableMeshSetSkinThickness = void function(const NewtonCollision* deformableMesh ,float skinThickness);
	alias da_NewtonCreateDeformableBody = NewtonBody* function(const NewtonWorld* newtonWorld ,const NewtonCollision* deformableMesh ,const float* matrix);
	alias da_NewtonDeformableMeshUpdateRenderNormals = void function(const NewtonCollision* deformableMesh);
	alias da_NewtonDeformableMeshGetVertexCount = int function(const NewtonCollision* deformableMesh);
	alias da_NewtonDeformableMeshGetVertexStreams = void function(const NewtonCollision* deformableMesh ,int vertexStrideInByte ,const float* vertex ,int normalStrideInByte ,const float* normal ,int uvStrideInByte0 ,const float* uv0 ,int uvStrideInByte1 ,const float* uv1);
	alias da_NewtonDeformableMeshGetFirstSegment = NewtonDeformableMeshSegment* function(const NewtonCollision* deformableMesh);
	alias da_NewtonDeformableMeshGetNextSegment = NewtonDeformableMeshSegment* function(const NewtonCollision* deformableMesh ,const NewtonDeformableMeshSegment* segment);
	alias da_NewtonDeformableMeshSegmentGetMaterialID = int function(const NewtonCollision* deformableMesh ,const NewtonDeformableMeshSegment* segment);
	alias da_NewtonDeformableMeshSegmentGetIndexCount = int function(const NewtonCollision* deformableMesh ,const NewtonDeformableMeshSegment* segment);
	alias da_NewtonDeformableMeshSegmentGetIndexList = short* function(const NewtonCollision* deformableMesh ,const NewtonDeformableMeshSegment* segment);
	alias da_NewtonConstraintCreateBall = NewtonJoint* function(const NewtonWorld* newtonWorld ,float* pivotPoint ,const NewtonBody* childBody ,const NewtonBody* parentBody);
	alias da_NewtonBallSetUserCallback = void function(const NewtonJoint* ball ,NewtonBallCallback callback);
	alias da_NewtonBallGetJointAngle = void function(const NewtonJoint* ball ,float* angle);
	alias da_NewtonBallGetJointOmega = void function(const NewtonJoint* ball ,float* omega);
	alias da_NewtonBallGetJointForce = void function(const NewtonJoint* ball ,const float* force);
	alias da_NewtonBallSetConeLimits = void function(const NewtonJoint* ball ,float* pin ,float maxConeAngle ,float maxTwistAngle);
	alias da_NewtonConstraintCreateHinge = NewtonJoint* function(const NewtonWorld* newtonWorld ,float* pivotPoint ,float* pinDir ,const NewtonBody* childBody ,const NewtonBody* parentBody);
	alias da_NewtonHingeSetUserCallback = void function(const NewtonJoint* hinge ,NewtonHingeCallback callback);
	alias da_NewtonHingeGetJointAngle = float function(const NewtonJoint* hinge);
	alias da_NewtonHingeGetJointOmega = float function(const NewtonJoint* hinge);
	alias da_NewtonHingeGetJointForce = void function(const NewtonJoint* hinge ,const float* force);
	alias da_NewtonHingeCalculateStopAlpha = float function(const NewtonJoint* hinge ,const NewtonHingeSliderUpdateDesc* desc ,float angle);
	alias da_NewtonConstraintCreateSlider = NewtonJoint* function(const NewtonWorld* newtonWorld ,float* pivotPoint ,float* pinDir ,const NewtonBody* childBody ,const NewtonBody* parentBody);
	alias da_NewtonSliderSetUserCallback = void function(const NewtonJoint* slider ,NewtonSliderCallback callback);
	alias da_NewtonSliderGetJointPosit = float function(NewtonJoint* slider);
	alias da_NewtonSliderGetJointVeloc = float function(NewtonJoint* slider);
	alias da_NewtonSliderGetJointForce = void function(const NewtonJoint* slider ,const float* force);
	alias da_NewtonSliderCalculateStopAccel = float function(const NewtonJoint* slider ,const NewtonHingeSliderUpdateDesc* desc ,float position);
	alias da_NewtonConstraintCreateCorkscrew = NewtonJoint* function(const NewtonWorld* newtonWorld ,float* pivotPoint ,float* pinDir ,const NewtonBody* childBody ,const NewtonBody* parentBody);
	alias da_NewtonCorkscrewSetUserCallback = void function(const NewtonJoint* corkscrew ,NewtonCorkscrewCallback callback);
	alias da_NewtonCorkscrewGetJointPosit = float function(const NewtonJoint* corkscrew);
	alias da_NewtonCorkscrewGetJointAngle = float function(const NewtonJoint* corkscrew);
	alias da_NewtonCorkscrewGetJointVeloc = float function(const NewtonJoint* corkscrew);
	alias da_NewtonCorkscrewGetJointOmega = float function(const NewtonJoint* corkscrew);
	alias da_NewtonCorkscrewGetJointForce = void function(const NewtonJoint* corkscrew ,const float* force);
	alias da_NewtonCorkscrewCalculateStopAlpha = float function(const NewtonJoint* corkscrew ,const NewtonHingeSliderUpdateDesc* desc ,float angle);
	alias da_NewtonCorkscrewCalculateStopAccel = float function(const NewtonJoint* corkscrew ,const NewtonHingeSliderUpdateDesc* desc ,float position);
	alias da_NewtonConstraintCreateUniversal = NewtonJoint* function(const NewtonWorld* newtonWorld ,float* pivotPoint ,float* pinDir0 ,float* pinDir1 ,const NewtonBody* childBody ,const NewtonBody* parentBody);
	alias da_NewtonUniversalSetUserCallback = void function(const NewtonJoint* universal ,NewtonUniversalCallback callback);
	alias da_NewtonUniversalGetJointAngle0 = float function(const NewtonJoint* universal);
	alias da_NewtonUniversalGetJointAngle1 = float function(const NewtonJoint* universal);
	alias da_NewtonUniversalGetJointOmega0 = float function(const NewtonJoint* universal);
	alias da_NewtonUniversalGetJointOmega1 = float function(const NewtonJoint* universal);
	alias da_NewtonUniversalGetJointForce = void function(const NewtonJoint* universal ,const float* force);
	alias da_NewtonUniversalCalculateStopAlpha0 = float function(const NewtonJoint* universal ,const NewtonHingeSliderUpdateDesc* desc ,float angle);
	alias da_NewtonUniversalCalculateStopAlpha1 = float function(const NewtonJoint* universal ,const NewtonHingeSliderUpdateDesc* desc ,float angle);
	alias da_NewtonConstraintCreateUpVector = NewtonJoint* function(const NewtonWorld* newtonWorld ,float* pinDir ,const NewtonBody* body_);
	alias da_NewtonUpVectorGetPin = void function(const NewtonJoint* upVector ,float* pin);
	alias da_NewtonUpVectorSetPin = void function(const NewtonJoint* upVector ,float* pin);
	alias da_NewtonConstraintCreateUserJoint = NewtonJoint* function(const NewtonWorld* newtonWorld ,int maxDOF ,NewtonUserBilateralCallback callback ,NewtonUserBilateralGetInfoCallback getInfo ,const NewtonBody* childBody ,const NewtonBody* parentBody);
	alias da_NewtonUserJointSetFeedbackCollectorCallback = void function(const NewtonJoint* joint ,NewtonUserBilateralCallback getFeedback);
	alias da_NewtonUserJointAddLinearRow = void function(const NewtonJoint* joint ,const float* pivot0 ,const float* pivot1 ,const float* dir);
	alias da_NewtonUserJointAddAngularRow = void function(const NewtonJoint* joint ,float relativeAngle ,const float* dir);
	alias da_NewtonUserJointAddGeneralRow = void function(const NewtonJoint* joint ,const float* jacobian0 ,const float* jacobian1);
	alias da_NewtonUserJointSetRowMinimumFriction = void function(const NewtonJoint* joint ,float friction);
	alias da_NewtonUserJointSetRowMaximumFriction = void function(const NewtonJoint* joint ,float friction);
	alias da_NewtonUserJointSetRowAcceleration = void function(const NewtonJoint* joint ,float acceleration);
	alias da_NewtonUserJointSetRowSpringDamperAcceleration = void function(const NewtonJoint* joint ,float springK ,float springD);
	alias da_NewtonUserJointSetRowStiffness = void function(const NewtonJoint* joint ,float stiffness);
	alias da_NewtonUserJointGetRowForce = float function(const NewtonJoint* joint ,int row);
	alias da_NewtonUserJointSetSolver = void function(const NewtonJoint* joint ,int solver ,int maxContactJoints);
	alias da_NewtonMeshCreate = NewtonMesh* function(const NewtonWorld* newtonWorld);
	alias da_NewtonMeshCreateFromMesh = NewtonMesh* function(const NewtonMesh* mesh);
	alias da_NewtonMeshCreateFromCollision = NewtonMesh* function(const NewtonCollision* collision);
	alias da_NewtonMeshCreateConvexHull = NewtonMesh* function(const NewtonWorld* newtonWorld ,int pointCount ,const float* vertexCloud ,int strideInBytes ,float tolerance);
	alias da_NewtonMeshCreateDelaunayTetrahedralization = NewtonMesh* function(const NewtonWorld* newtonWorld ,int pointCount ,const float* vertexCloud ,int strideInBytes ,int materialID ,const float* textureMatrix);
	alias da_NewtonMeshCreateVoronoiConvexDecomposition = NewtonMesh* function(const NewtonWorld* newtonWorld ,int pointCount ,const float* vertexCloud ,int strideInBytes ,int materialID ,const float* textureMatrix ,float boderConvexSize);
	alias da_NewtonMeshDestroy = void function(const NewtonMesh* mesh);
	alias da_NewtonMeshSaveOFF = void function(const NewtonMesh* mesh ,const char* filename);
	alias da_NewtonMeshLoadOFF = NewtonMesh* function(const NewtonWorld* newtonWorld ,const char* filename);
	alias da_NewtonMesApplyTransform = void function(const NewtonMesh* mesh ,const float* matrix);
	alias da_NewtonMeshCalculateOOBB = void function(const NewtonMesh* mesh ,const float* matrix ,const float* x ,const float* y ,const float* z);
	alias da_NewtonMeshCalculateVertexNormals = void function(const NewtonMesh* mesh ,float angleInRadians);
	alias da_NewtonMeshApplySphericalMapping = void function(const NewtonMesh* mesh ,int material);
	alias da_NewtonMeshApplyBoxMapping = void function(const NewtonMesh* mesh ,int front ,int side ,int top);
	alias da_NewtonMeshApplyCylindricalMapping = void function(const NewtonMesh* mesh ,int cylinderMaterial ,int capMaterial);
	alias da_NewtonMeshIsOpenMesh = int function(const NewtonMesh* mesh);
	alias da_NewtonMeshFixTJoints = void function(const NewtonMesh* mesh);
	alias da_NewtonMeshPolygonize = void function(const NewtonMesh* mesh);
	alias da_NewtonMeshTriangulate = void function(const NewtonMesh* mesh);
	alias da_NewtonMeshUnion = NewtonMesh* function(const NewtonMesh* mesh ,const NewtonMesh* clipper ,const float* clipperMatrix);
	alias da_NewtonMeshDifference = NewtonMesh* function(const NewtonMesh* mesh ,const NewtonMesh* clipper ,const float* clipperMatrix);
	alias da_NewtonMeshIntersection = NewtonMesh* function(const NewtonMesh* mesh ,const NewtonMesh* clipper ,const float* clipperMatrix);
	alias da_NewtonMeshClip = void function(const NewtonMesh* mesh ,const NewtonMesh* clipper ,const float* clipperMatrix ,const NewtonMesh** topMesh ,const NewtonMesh** bottomMesh);
	alias da_NewtonMeshSimplify = NewtonMesh* function(const NewtonMesh* mesh ,int maxVertexCount ,NewtonReportProgress reportPrograssCallback);
	alias da_NewtonMeshApproximateConvexDecomposition = NewtonMesh* function(const NewtonMesh* mesh ,float maxConcavity ,float backFaceDistanceFactor ,int maxCount ,int maxVertexPerHull ,NewtonReportProgress reportPrograssCallback);
	alias da_NewtonRemoveUnusedVertices = void function(const NewtonMesh* mesh ,const int* vertexRemapTable);
	alias da_NewtonMeshBeginFace = void function(const NewtonMesh* mesh);
	alias da_NewtonMeshAddFace = void function(const NewtonMesh* mesh ,int vertexCount ,const float* vertex ,int strideInBytes ,int materialIndex);
	alias da_NewtonMeshEndFace = void function(const NewtonMesh* mesh);
	alias da_NewtonMeshBuildFromVertexListIndexList = void function(const NewtonMesh* mesh ,int faceCount ,const int* faceIndexCount ,const int* faceMaterialIndex ,const float* vertex ,int vertexStrideInBytes ,const int* vertexIndex ,const float* normal ,int normalStrideInBytes ,const int* normalIndex ,const float* uv0 ,int uv0StrideInBytes ,const int* uv0Index ,const float* uv1 ,int uv1StrideInBytes ,const int* uv1Index);
	alias da_NewtonMeshGetVertexStreams = void function(const NewtonMesh* mesh ,int vertexStrideInByte ,const float* vertex ,int normalStrideInByte ,const float* normal ,int uvStrideInByte0 ,const float* uv0 ,int uvStrideInByte1 ,const float* uv1);
	alias da_NewtonMeshGetIndirectVertexStreams = void function(const NewtonMesh* mesh ,int vertexStrideInByte ,const float* vertex ,const int* vertexIndices ,const int* vertexCount ,int normalStrideInByte ,const float* normal ,const int* normalIndices ,const int* normalCount ,int uvStrideInByte0 ,const float* uv0 ,const int* uvIndices0 ,const int* uvCount0 ,int uvStrideInByte1 ,const float* uv1 ,const int* uvIndices1 ,const int* uvCount1);
	alias da_NewtonMeshBeginHandle = void* function(const NewtonMesh* mesh);
	alias da_NewtonMeshEndHandle = void function(const NewtonMesh* mesh ,const void* handle);
	alias da_NewtonMeshFirstMaterial = int function(const NewtonMesh* mesh ,const void* handle);
	alias da_NewtonMeshNextMaterial = int function(const NewtonMesh* mesh ,const void* handle ,int materialId);
	alias da_NewtonMeshMaterialGetMaterial = int function(const NewtonMesh* mesh ,const void* handle ,int materialId);
	alias da_NewtonMeshMaterialGetIndexCount = int function(const NewtonMesh* mesh ,const void* handle ,int materialId);
	alias da_NewtonMeshMaterialGetIndexStream = void function(const NewtonMesh* mesh ,const void* handle ,int materialId ,const int* index);
	alias da_NewtonMeshMaterialGetIndexStreamShort = void function(const NewtonMesh* mesh ,const void* handle ,int materialId ,const short* index);
	alias da_NewtonMeshCreateFirstSingleSegment = NewtonMesh* function(const NewtonMesh* mesh);
	alias da_NewtonMeshCreateNextSingleSegment = NewtonMesh* function(const NewtonMesh* mesh ,const NewtonMesh* segment);
	alias da_NewtonMeshCreateFirstLayer = NewtonMesh* function(const NewtonMesh* mesh);
	alias da_NewtonMeshCreateNextLayer = NewtonMesh* function(const NewtonMesh* mesh ,const NewtonMesh* segment);
	alias da_NewtonMeshGetTotalFaceCount = int function(const NewtonMesh* mesh);
	alias da_NewtonMeshGetTotalIndexCount = int function(const NewtonMesh* mesh);
	alias da_NewtonMeshGetFaces = void function(const NewtonMesh* mesh ,const int* faceIndexCount ,const int* faceMaterial ,const void** faceIndices);
	alias da_NewtonMeshGetPointCount = int function(const NewtonMesh* mesh);
	alias da_NewtonMeshGetPointStrideInByte = int function(const NewtonMesh* mesh);
	alias da_NewtonMeshGetPointArray = double* function(const NewtonMesh* mesh);
	alias da_NewtonMeshGetNormalArray = double* function(const NewtonMesh* mesh);
	alias da_NewtonMeshGetUV0Array = double* function(const NewtonMesh* mesh);
	alias da_NewtonMeshGetUV1Array = double* function(const NewtonMesh* mesh);
	alias da_NewtonMeshGetVertexCount = int function(const NewtonMesh* mesh);
	alias da_NewtonMeshGetVertexStrideInByte = int function(const NewtonMesh* mesh);
	alias da_NewtonMeshGetVertexArray = double* function(const NewtonMesh* mesh);
	alias da_NewtonMeshGetFirstVertex = void* function(const NewtonMesh* mesh);
	alias da_NewtonMeshGetNextVertex = void* function(const NewtonMesh* mesh ,const void* vertex);
	alias da_NewtonMeshGetVertexIndex = int function(const NewtonMesh* mesh ,const void* vertex);
	alias da_NewtonMeshGetFirstPoint = void* function(const NewtonMesh* mesh);
	alias da_NewtonMeshGetNextPoint = void* function(const NewtonMesh* mesh ,const void* point);
	alias da_NewtonMeshGetPointIndex = int function(const NewtonMesh* mesh ,const void* point);
	alias da_NewtonMeshGetVertexIndexFromPoint = int function(const NewtonMesh* mesh ,const void* point);
	alias da_NewtonMeshGetFirstEdge = void* function(const NewtonMesh* mesh);
	alias da_NewtonMeshGetNextEdge = void* function(const NewtonMesh* mesh ,const void* edge);
	alias da_NewtonMeshGetEdgeIndices = void function(const NewtonMesh* mesh ,const void* edge ,const int* v0 ,const int* v1);
	alias da_NewtonMeshGetFirstFace = void* function(const NewtonMesh* mesh);
	alias da_NewtonMeshGetNextFace = void* function(const NewtonMesh* mesh ,const void* face);
	alias da_NewtonMeshIsFaceOpen = int function(const NewtonMesh* mesh ,const void* face);
	alias da_NewtonMeshGetFaceMaterial = int function(const NewtonMesh* mesh ,const void* face);
	alias da_NewtonMeshGetFaceIndexCount = int function(const NewtonMesh* mesh ,const void* face);
	alias da_NewtonMeshGetFaceIndices = void function(const NewtonMesh* mesh ,const void* face ,const int* indices);
	alias da_NewtonMeshGetFacePointIndices = void function(const NewtonMesh* mesh ,const void* face ,const int* indices);
	alias da_NewtonMeshCalculateFaceNormal = void function(const NewtonMesh* mesh ,const void* face ,const double* normal);
	alias da_NewtonMeshSetFaceMaterial = void function(const NewtonMesh* mesh ,const void* face ,int matId);
}

__gshared
{
	da_NewtonWorldGetVersion NewtonWorldGetVersion;
	da_NewtonWorlfloatSize NewtonWorlfloatSize;
	da_NewtonGetMemoryUsed NewtonGetMemoryUsed;
	da_NewtonSetMemorySystem NewtonSetMemorySystem;
	da_NewtonCreate NewtonCreate;
	da_NewtonDestroy NewtonDestroy;
	da_NewtonDestroyAllBodies NewtonDestroyAllBodies;
	da_NewtonEnumrateDevices NewtonEnumrateDevices;
	da_NewtonGetCurrentDevice NewtonGetCurrentDevice;
	da_NewtonSetCurrentDevice NewtonSetCurrentDevice;
	da_NewtonGetDeviceString NewtonGetDeviceString;
	da_NewtonInvalidateCache NewtonInvalidateCache;
	da_NewtonSetSolverModel NewtonSetSolverModel;
	da_NewtonSetMultiThreadSolverOnSingleIsland NewtonSetMultiThreadSolverOnSingleIsland;
	da_NewtonGetMultiThreadSolverOnSingleIsland NewtonGetMultiThreadSolverOnSingleIsland;
	da_NewtonSetPerformanceClock NewtonSetPerformanceClock;
	da_NewtonReadPerformanceTicks NewtonReadPerformanceTicks;
	da_NewtonGetBroadphaseAlgorithm NewtonGetBroadphaseAlgorithm;
	da_NewtonSelectBroadphaseAlgorithm NewtonSelectBroadphaseAlgorithm;
	da_NewtonUpdate NewtonUpdate;
	da_NewtonUpdateAsync NewtonUpdateAsync;
	da_NewtonWaitForUpdateToFinish NewtonWaitForUpdateToFinish;
	da_NewtonSerializeToFile NewtonSerializeToFile;
	da_NewtonSerializeBodyArray NewtonSerializeBodyArray;
	da_NewtonDeserializeBodyArray NewtonDeserializeBodyArray;
	da_NewtonReadThreadPerformanceTicks NewtonReadThreadPerformanceTicks;
	da_NewtonWorldCriticalSectionLock NewtonWorldCriticalSectionLock;
	da_NewtonWorldCriticalSectionUnlock NewtonWorldCriticalSectionUnlock;
	da_NewtonSetThreadsCount NewtonSetThreadsCount;
	da_NewtonGetThreadsCount NewtonGetThreadsCount;
	da_NewtonGetMaxThreadsCount NewtonGetMaxThreadsCount;
	da_NewtonDispachThreadJob NewtonDispachThreadJob;
	da_NewtonSyncThreadJobs NewtonSyncThreadJobs;
	da_NewtonAtomicAdd NewtonAtomicAdd;
	da_NewtonAtomicSwap NewtonAtomicSwap;
	da_NewtonYield NewtonYield;
	da_NewtonSetFrictionModel NewtonSetFrictionModel;
	da_NewtonSetMinimumFrameRate NewtonSetMinimumFrameRate;
	da_NewtonSetBodyLeaveWorldEvent NewtonSetBodyLeaveWorldEvent;
	da_NewtonSetIslandUpdateEvent NewtonSetIslandUpdateEvent;
	da_NewtonSetDestroyBodyByExeciveForce NewtonSetDestroyBodyByExeciveForce;
	da_NewtonWorldForEachJointDo NewtonWorldForEachJointDo;
	da_NewtonWorldForEachBodyInAABBDo NewtonWorldForEachBodyInAABBDo;
	da_NewtonWorldSetUserData NewtonWorldSetUserData;
	da_NewtonWorldGetUserData NewtonWorldGetUserData;
	da_NewtonWorldGetListenerUserData NewtonWorldGetListenerUserData;
	da_NewtonWorldGetPreListener NewtonWorldGetPreListener;
	da_NewtonWorldAddPreListener NewtonWorldAddPreListener;
	da_NewtonWorldGetPostListener NewtonWorldGetPostListener;
	da_NewtonWorldAddPostListener NewtonWorldAddPostListener;
	da_NewtonWorldSetDestructorCallback NewtonWorldSetDestructorCallback;
	da_NewtonWorldGetDestructorCallback NewtonWorldGetDestructorCallback;
	da_NewtonWorldRayCast NewtonWorldRayCast;
	da_NewtonWorldCollide NewtonWorldCollide;
	da_NewtonWorldConvexCast NewtonWorldConvexCast;
	da_NewtonWorldGetBodyCount NewtonWorldGetBodyCount;
	da_NewtonWorldGetConstraintCount NewtonWorldGetConstraintCount;
	da_NewtonIslandGetBody NewtonIslandGetBody;
	da_NewtonIslandGetBodyAABB NewtonIslandGetBodyAABB;
	da_NewtonMaterialCreateGroupID NewtonMaterialCreateGroupID;
	da_NewtonMaterialGetDefaultGroupID NewtonMaterialGetDefaultGroupID;
	da_NewtonMaterialDestroyAllGroupID NewtonMaterialDestroyAllGroupID;
	da_NewtonMaterialGetUserData NewtonMaterialGetUserData;
	da_NewtonMaterialSetSurfaceThickness NewtonMaterialSetSurfaceThickness;
	da_NewtonMaterialSetCollisionCallback NewtonMaterialSetCollisionCallback;
	da_NewtonMaterialSetDefaultSoftness NewtonMaterialSetDefaultSoftness;
	da_NewtonMaterialSetDefaultElasticity NewtonMaterialSetDefaultElasticity;
	da_NewtonMaterialSetDefaultCollidable NewtonMaterialSetDefaultCollidable;
	da_NewtonMaterialSetDefaultFriction NewtonMaterialSetDefaultFriction;
	da_NewtonWorldGetFirstMaterial NewtonWorldGetFirstMaterial;
	da_NewtonWorldGetNextMaterial NewtonWorldGetNextMaterial;
	da_NewtonWorldGetFirstBody NewtonWorldGetFirstBody;
	da_NewtonWorldGetNextBody NewtonWorldGetNextBody;
	da_NewtonMaterialGetMaterialPairUserData NewtonMaterialGetMaterialPairUserData;
	da_NewtonMaterialGetContactFaceAttribute NewtonMaterialGetContactFaceAttribute;
	da_NewtonMaterialGetBodyCollidingShape NewtonMaterialGetBodyCollidingShape;
	da_NewtonMaterialGetContactNormalSpeed NewtonMaterialGetContactNormalSpeed;
	da_NewtonMaterialGetContactForce NewtonMaterialGetContactForce;
	da_NewtonMaterialGetContactPositionAndNormal NewtonMaterialGetContactPositionAndNormal;
	da_NewtonMaterialGetContactTangentDirections NewtonMaterialGetContactTangentDirections;
	da_NewtonMaterialGetContactTangentSpeed NewtonMaterialGetContactTangentSpeed;
	da_NewtonMaterialSetContactSoftness NewtonMaterialSetContactSoftness;
	da_NewtonMaterialSetContactElasticity NewtonMaterialSetContactElasticity;
	da_NewtonMaterialSetContactFrictionState NewtonMaterialSetContactFrictionState;
	da_NewtonMaterialSetContactFrictionCoef NewtonMaterialSetContactFrictionCoef;
	da_NewtonMaterialSetContactNormalAcceleration NewtonMaterialSetContactNormalAcceleration;
	da_NewtonMaterialSetContactNormalDirection NewtonMaterialSetContactNormalDirection;
	da_NewtonMaterialSetContactTangentAcceleration NewtonMaterialSetContactTangentAcceleration;
	da_NewtonMaterialContactRotateTangentDirections NewtonMaterialContactRotateTangentDirections;
	da_NewtonCreateNull NewtonCreateNull;
	da_NewtonCreateSphere NewtonCreateSphere;
	da_NewtonCreateBox NewtonCreateBox;
	da_NewtonCreateCone NewtonCreateCone;
	da_NewtonCreateCapsule NewtonCreateCapsule;
	da_NewtonCreateCylinder NewtonCreateCylinder;
	da_NewtonCreateTaperedCapsule NewtonCreateTaperedCapsule;
	da_NewtonCreateTaperedCylinder NewtonCreateTaperedCylinder;
	da_NewtonCreateChamferCylinder NewtonCreateChamferCylinder;
	da_NewtonCreateConvexHull NewtonCreateConvexHull;
	da_NewtonCreateConvexHullFromMesh NewtonCreateConvexHullFromMesh;
	da_NewtonCollisionGetMode NewtonCollisionGetMode;
	da_NewtonCollisionSetCollisonMode NewtonCollisionSetCollisonMode;
	da_NewtonConvexHullGetFaceIndices NewtonConvexHullGetFaceIndices;
	da_NewtonConvexCollisionCalculateVolume NewtonConvexCollisionCalculateVolume;
	da_NewtonConvexCollisionCalculateInertialMatrix NewtonConvexCollisionCalculateInertialMatrix;
	da_NewtonCreateCompoundCollision NewtonCreateCompoundCollision;
	da_NewtonCreateCompoundCollisionFromMesh NewtonCreateCompoundCollisionFromMesh;
	da_NewtonCompoundCollisionBeginAddRemove NewtonCompoundCollisionBeginAddRemove;
	da_NewtonCompoundCollisionAddSubCollision NewtonCompoundCollisionAddSubCollision;
	da_NewtonCompoundCollisionRemoveSubCollision NewtonCompoundCollisionRemoveSubCollision;
	da_NewtonCompoundCollisionRemoveSubCollisionByIndex NewtonCompoundCollisionRemoveSubCollisionByIndex;
	da_NewtonCompoundCollisionSetSubCollisionMatrix NewtonCompoundCollisionSetSubCollisionMatrix;
	da_NewtonCompoundCollisionEndAddRemove NewtonCompoundCollisionEndAddRemove;
	da_NewtonCompoundCollisionGetFirstNode NewtonCompoundCollisionGetFirstNode;
	da_NewtonCompoundCollisionGetNextNode NewtonCompoundCollisionGetNextNode;
	da_NewtonCompoundCollisionGetNodeByIndex NewtonCompoundCollisionGetNodeByIndex;
	da_NewtonCompoundCollisionGetNodeIndex NewtonCompoundCollisionGetNodeIndex;
	da_NewtonCompoundCollisionGetCollisionFromNode NewtonCompoundCollisionGetCollisionFromNode;
	da_NewtonCreateSceneCollision NewtonCreateSceneCollision;
	da_NewtonSceneCollisionBeginAddRemove NewtonSceneCollisionBeginAddRemove;
	da_NewtonSceneCollisionAddSubCollision NewtonSceneCollisionAddSubCollision;
	da_NewtonSceneCollisionSetSubCollisionMatrix NewtonSceneCollisionSetSubCollisionMatrix;
	da_NewtonSceneCollisionEndAddRemove NewtonSceneCollisionEndAddRemove;
	da_NewtonSceneCollisionGetFirstNode NewtonSceneCollisionGetFirstNode;
	da_NewtonSceneCollisionGetNextNode NewtonSceneCollisionGetNextNode;
	da_NewtonSceneCollisionGetCollisionFromNode NewtonSceneCollisionGetCollisionFromNode;
	da_NewtonCreateUserMeshCollision NewtonCreateUserMeshCollision;
	da_NewtonCreateCollisionFromSerialization NewtonCreateCollisionFromSerialization;
	da_NewtonCollisionSerialize NewtonCollisionSerialize;
	da_NewtonCollisionGetInfo NewtonCollisionGetInfo;
	da_NewtonCreateHeightFieldCollision NewtonCreateHeightFieldCollision;
	da_NewtonHeightFieldSetUserRayCastCallback NewtonHeightFieldSetUserRayCastCallback;
	da_NewtonCreateTreeCollision NewtonCreateTreeCollision;
	da_NewtonCreateTreeCollisionFromMesh NewtonCreateTreeCollisionFromMesh;
	da_NewtonTreeCollisionSetUserRayCastCallback NewtonTreeCollisionSetUserRayCastCallback;
	da_NewtonTreeCollisionBeginBuild NewtonTreeCollisionBeginBuild;
	da_NewtonTreeCollisionAddFace NewtonTreeCollisionAddFace;
	da_NewtonTreeCollisionEndBuild NewtonTreeCollisionEndBuild;
	da_NewtonTreeCollisionGetFaceAtribute NewtonTreeCollisionGetFaceAtribute;
	da_NewtonTreeCollisionSetFaceAtribute NewtonTreeCollisionSetFaceAtribute;
	da_NewtonTreeCollisionGetVertexListIndexListInAABB NewtonTreeCollisionGetVertexListIndexListInAABB;
	da_NewtonStaticCollisionSetDebugCallback NewtonStaticCollisionSetDebugCallback;
	da_NewtonCollisionCreateInstance NewtonCollisionCreateInstance;
	da_NewtonCollisionGetType NewtonCollisionGetType;
	da_NewtonCollisionSetUserData NewtonCollisionSetUserData;
	da_NewtonCollisionGetUserData NewtonCollisionGetUserData;
	da_NewtonCollisionSetUserID NewtonCollisionSetUserID;
	da_NewtonCollisionGetUserID NewtonCollisionGetUserID;
	da_NewtonCollisionSetMatrix NewtonCollisionSetMatrix;
	da_NewtonCollisionGetMatrix NewtonCollisionGetMatrix;
	da_NewtonCollisionSetScale NewtonCollisionSetScale;
	da_NewtonCollisionGetScale NewtonCollisionGetScale;
	da_NewtonDestroyCollision NewtonDestroyCollision;
	da_NewtonCollisionPointDistance NewtonCollisionPointDistance;
	da_NewtonCollisionClosestPoint NewtonCollisionClosestPoint;
	da_NewtonCollisionCollide NewtonCollisionCollide;
	da_NewtonCollisionCollideContinue NewtonCollisionCollideContinue;
	da_NewtonCollisionSupportVertex NewtonCollisionSupportVertex;
	da_NewtonCollisionRayCast NewtonCollisionRayCast;
	da_NewtonCollisionCalculateAABB NewtonCollisionCalculateAABB;
	da_NewtonCollisionForEachPolygonDo NewtonCollisionForEachPolygonDo;
	da_NewtonGetEulerAngle NewtonGetEulerAngle;
	da_NewtonSetEulerAngle NewtonSetEulerAngle;
	da_NewtonCalculateSpringDamperAcceleration NewtonCalculateSpringDamperAcceleration;
	da_NewtonCreateDynamicBody NewtonCreateDynamicBody;
	da_NewtonCreateKinematicBody NewtonCreateKinematicBody;
	da_NewtonDestroyBody NewtonDestroyBody;
	da_NewtonBodyGetType NewtonBodyGetType;
	da_NewtonBodyAddForce NewtonBodyAddForce;
	da_NewtonBodyAddTorque NewtonBodyAddTorque;
	da_NewtonBodyCalculateInverseDynamicsForce NewtonBodyCalculateInverseDynamicsForce;
	da_NewtonBodySetCentreOfMass NewtonBodySetCentreOfMass;
	da_NewtonBodySetMassMatrix___ NewtonBodySetMassMatrix___;
	da_NewtonBodySetMassProperties NewtonBodySetMassProperties;
	da_NewtonBodySetMatrix NewtonBodySetMatrix;
	da_NewtonBodySetMatrixRecursive NewtonBodySetMatrixRecursive;
	da_NewtonBodySetMaterialGroupID NewtonBodySetMaterialGroupID;
	da_NewtonBodySetContinuousCollisionMode NewtonBodySetContinuousCollisionMode;
	da_NewtonBodySetJointRecursiveCollision NewtonBodySetJointRecursiveCollision;
	da_NewtonBodySetOmega NewtonBodySetOmega;
	da_NewtonBodySetVelocity NewtonBodySetVelocity;
	da_NewtonBodySetForce NewtonBodySetForce;
	da_NewtonBodySetTorque NewtonBodySetTorque;
	da_NewtonBodySetLinearDamping NewtonBodySetLinearDamping;
	da_NewtonBodySetAngularDamping NewtonBodySetAngularDamping;
	da_NewtonBodySetCollision NewtonBodySetCollision;
	da_NewtonBodySetCollisionScale NewtonBodySetCollisionScale;
	da_NewtonBodyGetSleepState NewtonBodyGetSleepState;
	da_NewtonBodySetSleepState NewtonBodySetSleepState;
	da_NewtonBodyGetAutoSleep NewtonBodyGetAutoSleep;
	da_NewtonBodySetAutoSleep NewtonBodySetAutoSleep;
	da_NewtonBodyGetFreezeState NewtonBodyGetFreezeState;
	da_NewtonBodySetFreezeState NewtonBodySetFreezeState;
	da_NewtonBodySetDestructorCallback NewtonBodySetDestructorCallback;
	da_NewtonBodyGetDestructorCallback NewtonBodyGetDestructorCallback;
	da_NewtonBodySetTransformCallback NewtonBodySetTransformCallback;
	da_NewtonBodyGetTransformCallback NewtonBodyGetTransformCallback;
	da_NewtonBodySetForceAndTorqueCallback NewtonBodySetForceAndTorqueCallback;
	da_NewtonBodyGetForceAndTorqueCallback NewtonBodyGetForceAndTorqueCallback;
	da_NewtonBodyGetID NewtonBodyGetID;
	da_NewtonBodySetUserData NewtonBodySetUserData;
	da_NewtonBodyGetUserData NewtonBodyGetUserData;
	da_NewtonBodyGetWorld NewtonBodyGetWorld;
	da_NewtonBodyGetCollision NewtonBodyGetCollision;
	da_NewtonBodyGetMaterialGroupID NewtonBodyGetMaterialGroupID;
	da_NewtonBodyGetContinuousCollisionMode NewtonBodyGetContinuousCollisionMode;
	da_NewtonBodyGetJointRecursiveCollision NewtonBodyGetJointRecursiveCollision;
	da_NewtonBodyGetMatrix NewtonBodyGetMatrix;
	da_NewtonBodyGetRotation NewtonBodyGetRotation;
	da_NewtonBodyGetMassMatrix NewtonBodyGetMassMatrix;
	da_NewtonBodyGetInvMass NewtonBodyGetInvMass;
	da_NewtonBodyGetInertiaMatrix NewtonBodyGetInertiaMatrix;
	da_NewtonBodyGetInvInertiaMatrix NewtonBodyGetInvInertiaMatrix;
	da_NewtonBodyGetOmega NewtonBodyGetOmega;
	da_NewtonBodyGetVelocity NewtonBodyGetVelocity;
	da_NewtonBodyGetForce NewtonBodyGetForce;
	da_NewtonBodyGetTorque NewtonBodyGetTorque;
	da_NewtonBodyGetForceAcc NewtonBodyGetForceAcc;
	da_NewtonBodyGetTorqueAcc NewtonBodyGetTorqueAcc;
	da_NewtonBodyGetCentreOfMass NewtonBodyGetCentreOfMass;
	da_NewtonBodyGetPointVelocity NewtonBodyGetPointVelocity;
	da_NewtonBodyAddImpulse NewtonBodyAddImpulse;
	da_NewtonBodyApplyImpulseArray NewtonBodyApplyImpulseArray;
	da_NewtonBodyApplyImpulsePair NewtonBodyApplyImpulsePair;
	da_NewtonBodyIntegrateVelocity NewtonBodyIntegrateVelocity;
	da_NewtonBodyGetLinearDamping NewtonBodyGetLinearDamping;
	da_NewtonBodyGetAngularDamping NewtonBodyGetAngularDamping;
	da_NewtonBodyGetAABB NewtonBodyGetAABB;
	da_NewtonBodyGetFirstJoint NewtonBodyGetFirstJoint;
	da_NewtonBodyGetNextJoint NewtonBodyGetNextJoint;
	da_NewtonBodyGetFirstContactJoint NewtonBodyGetFirstContactJoint;
	da_NewtonBodyGetNextContactJoint NewtonBodyGetNextContactJoint;
	da_NewtonBodyAddBuoyancyForce NewtonBodyAddBuoyancyForce;
	da_NewtonContactJointGetFirstContact NewtonContactJointGetFirstContact;
	da_NewtonContactJointGetNextContact NewtonContactJointGetNextContact;
	da_NewtonContactJointGetContactCount NewtonContactJointGetContactCount;
	da_NewtonContactJointRemoveContact NewtonContactJointRemoveContact;
	da_NewtonContactGetMaterial NewtonContactGetMaterial;
	da_NewtonJointGetUserData NewtonJointGetUserData;
	da_NewtonJointSetUserData NewtonJointSetUserData;
	da_NewtonJointGetBody0 NewtonJointGetBody0;
	da_NewtonJointGetBody1 NewtonJointGetBody1;
	da_NewtonJointGetInfo NewtonJointGetInfo;
	da_NewtonJointGetCollisionState NewtonJointGetCollisionState;
	da_NewtonJointSetCollisionState NewtonJointSetCollisionState;
	da_NewtonJointGetStiffness NewtonJointGetStiffness;
	da_NewtonJointSetStiffness NewtonJointSetStiffness;
	da_NewtonDestroyJoint NewtonDestroyJoint;
	da_NewtonJointSetDestructor NewtonJointSetDestructor;
	da_NewtonCreateDeformableMesh NewtonCreateDeformableMesh;
	da_NewtonDeformableMeshSetPlasticity NewtonDeformableMeshSetPlasticity;
	da_NewtonDeformableMeshSetStiffness NewtonDeformableMeshSetStiffness;
	da_NewtonDeformableMeshSetSkinThickness NewtonDeformableMeshSetSkinThickness;
	da_NewtonCreateDeformableBody NewtonCreateDeformableBody;
	da_NewtonDeformableMeshUpdateRenderNormals NewtonDeformableMeshUpdateRenderNormals;
	da_NewtonDeformableMeshGetVertexCount NewtonDeformableMeshGetVertexCount;
	da_NewtonDeformableMeshGetVertexStreams NewtonDeformableMeshGetVertexStreams;
	da_NewtonDeformableMeshGetFirstSegment NewtonDeformableMeshGetFirstSegment;
	da_NewtonDeformableMeshGetNextSegment NewtonDeformableMeshGetNextSegment;
	da_NewtonDeformableMeshSegmentGetMaterialID NewtonDeformableMeshSegmentGetMaterialID;
	da_NewtonDeformableMeshSegmentGetIndexCount NewtonDeformableMeshSegmentGetIndexCount;
	da_NewtonDeformableMeshSegmentGetIndexList NewtonDeformableMeshSegmentGetIndexList;
	da_NewtonConstraintCreateBall NewtonConstraintCreateBall;
	da_NewtonBallSetUserCallback NewtonBallSetUserCallback;
	da_NewtonBallGetJointAngle NewtonBallGetJointAngle;
	da_NewtonBallGetJointOmega NewtonBallGetJointOmega;
	da_NewtonBallGetJointForce NewtonBallGetJointForce;
	da_NewtonBallSetConeLimits NewtonBallSetConeLimits;
	da_NewtonConstraintCreateHinge NewtonConstraintCreateHinge;
	da_NewtonHingeSetUserCallback NewtonHingeSetUserCallback;
	da_NewtonHingeGetJointAngle NewtonHingeGetJointAngle;
	da_NewtonHingeGetJointOmega NewtonHingeGetJointOmega;
	da_NewtonHingeGetJointForce NewtonHingeGetJointForce;
	da_NewtonHingeCalculateStopAlpha NewtonHingeCalculateStopAlpha;
	da_NewtonConstraintCreateSlider NewtonConstraintCreateSlider;
	da_NewtonSliderSetUserCallback NewtonSliderSetUserCallback;
	da_NewtonSliderGetJointPosit NewtonSliderGetJointPosit;
	da_NewtonSliderGetJointVeloc NewtonSliderGetJointVeloc;
	da_NewtonSliderGetJointForce NewtonSliderGetJointForce;
	da_NewtonSliderCalculateStopAccel NewtonSliderCalculateStopAccel;
	da_NewtonConstraintCreateCorkscrew NewtonConstraintCreateCorkscrew;
	da_NewtonCorkscrewSetUserCallback NewtonCorkscrewSetUserCallback;
	da_NewtonCorkscrewGetJointPosit NewtonCorkscrewGetJointPosit;
	da_NewtonCorkscrewGetJointAngle NewtonCorkscrewGetJointAngle;
	da_NewtonCorkscrewGetJointVeloc NewtonCorkscrewGetJointVeloc;
	da_NewtonCorkscrewGetJointOmega NewtonCorkscrewGetJointOmega;
	da_NewtonCorkscrewGetJointForce NewtonCorkscrewGetJointForce;
	da_NewtonCorkscrewCalculateStopAlpha NewtonCorkscrewCalculateStopAlpha;
	da_NewtonCorkscrewCalculateStopAccel NewtonCorkscrewCalculateStopAccel;
	da_NewtonConstraintCreateUniversal NewtonConstraintCreateUniversal;
	da_NewtonUniversalSetUserCallback NewtonUniversalSetUserCallback;
	da_NewtonUniversalGetJointAngle0 NewtonUniversalGetJointAngle0;
	da_NewtonUniversalGetJointAngle1 NewtonUniversalGetJointAngle1;
	da_NewtonUniversalGetJointOmega0 NewtonUniversalGetJointOmega0;
	da_NewtonUniversalGetJointOmega1 NewtonUniversalGetJointOmega1;
	da_NewtonUniversalGetJointForce NewtonUniversalGetJointForce;
	da_NewtonUniversalCalculateStopAlpha0 NewtonUniversalCalculateStopAlpha0;
	da_NewtonUniversalCalculateStopAlpha1 NewtonUniversalCalculateStopAlpha1;
	da_NewtonConstraintCreateUpVector NewtonConstraintCreateUpVector;
	da_NewtonUpVectorGetPin NewtonUpVectorGetPin;
	da_NewtonUpVectorSetPin NewtonUpVectorSetPin;
	da_NewtonConstraintCreateUserJoint NewtonConstraintCreateUserJoint;
	da_NewtonUserJointSetFeedbackCollectorCallback NewtonUserJointSetFeedbackCollectorCallback;
	da_NewtonUserJointAddLinearRow NewtonUserJointAddLinearRow;
	da_NewtonUserJointAddAngularRow NewtonUserJointAddAngularRow;
	da_NewtonUserJointAddGeneralRow NewtonUserJointAddGeneralRow;
	da_NewtonUserJointSetRowMinimumFriction NewtonUserJointSetRowMinimumFriction;
	da_NewtonUserJointSetRowMaximumFriction NewtonUserJointSetRowMaximumFriction;
	da_NewtonUserJointSetRowAcceleration NewtonUserJointSetRowAcceleration;
	da_NewtonUserJointSetRowSpringDamperAcceleration NewtonUserJointSetRowSpringDamperAcceleration;
	da_NewtonUserJointSetRowStiffness NewtonUserJointSetRowStiffness;
	da_NewtonUserJointGetRowForce NewtonUserJointGetRowForce;
	da_NewtonUserJointSetSolver NewtonUserJointSetSolver;
	da_NewtonMeshCreate NewtonMeshCreate;
	da_NewtonMeshCreateFromMesh NewtonMeshCreateFromMesh;
	da_NewtonMeshCreateFromCollision NewtonMeshCreateFromCollision;
	da_NewtonMeshCreateConvexHull NewtonMeshCreateConvexHull;
	da_NewtonMeshCreateDelaunayTetrahedralization NewtonMeshCreateDelaunayTetrahedralization;
	da_NewtonMeshCreateVoronoiConvexDecomposition NewtonMeshCreateVoronoiConvexDecomposition;
	da_NewtonMeshDestroy NewtonMeshDestroy;
	da_NewtonMeshSaveOFF NewtonMeshSaveOFF;
	da_NewtonMeshLoadOFF NewtonMeshLoadOFF;
	da_NewtonMesApplyTransform NewtonMesApplyTransform;
	da_NewtonMeshCalculateOOBB NewtonMeshCalculateOOBB;
	da_NewtonMeshCalculateVertexNormals NewtonMeshCalculateVertexNormals;
	da_NewtonMeshApplySphericalMapping NewtonMeshApplySphericalMapping;
	da_NewtonMeshApplyBoxMapping NewtonMeshApplyBoxMapping;
	da_NewtonMeshApplyCylindricalMapping NewtonMeshApplyCylindricalMapping;
	da_NewtonMeshIsOpenMesh NewtonMeshIsOpenMesh;
	da_NewtonMeshFixTJoints NewtonMeshFixTJoints;
	da_NewtonMeshPolygonize NewtonMeshPolygonize;
	da_NewtonMeshTriangulate NewtonMeshTriangulate;
	da_NewtonMeshUnion NewtonMeshUnion;
	da_NewtonMeshDifference NewtonMeshDifference;
	da_NewtonMeshIntersection NewtonMeshIntersection;
	da_NewtonMeshClip NewtonMeshClip;
	da_NewtonMeshSimplify NewtonMeshSimplify;
	da_NewtonMeshApproximateConvexDecomposition NewtonMeshApproximateConvexDecomposition;
	da_NewtonRemoveUnusedVertices NewtonRemoveUnusedVertices;
	da_NewtonMeshBeginFace NewtonMeshBeginFace;
	da_NewtonMeshAddFace NewtonMeshAddFace;
	da_NewtonMeshEndFace NewtonMeshEndFace;
	da_NewtonMeshBuildFromVertexListIndexList NewtonMeshBuildFromVertexListIndexList;
	da_NewtonMeshGetVertexStreams NewtonMeshGetVertexStreams;
	da_NewtonMeshGetIndirectVertexStreams NewtonMeshGetIndirectVertexStreams;
	da_NewtonMeshBeginHandle NewtonMeshBeginHandle;
	da_NewtonMeshEndHandle NewtonMeshEndHandle;
	da_NewtonMeshFirstMaterial NewtonMeshFirstMaterial;
	da_NewtonMeshNextMaterial NewtonMeshNextMaterial;
	da_NewtonMeshMaterialGetMaterial NewtonMeshMaterialGetMaterial;
	da_NewtonMeshMaterialGetIndexCount NewtonMeshMaterialGetIndexCount;
	da_NewtonMeshMaterialGetIndexStream NewtonMeshMaterialGetIndexStream;
	da_NewtonMeshMaterialGetIndexStreamShort NewtonMeshMaterialGetIndexStreamShort;
	da_NewtonMeshCreateFirstSingleSegment NewtonMeshCreateFirstSingleSegment;
	da_NewtonMeshCreateNextSingleSegment NewtonMeshCreateNextSingleSegment;
	da_NewtonMeshCreateFirstLayer NewtonMeshCreateFirstLayer;
	da_NewtonMeshCreateNextLayer NewtonMeshCreateNextLayer;
	da_NewtonMeshGetTotalFaceCount NewtonMeshGetTotalFaceCount;
	da_NewtonMeshGetTotalIndexCount NewtonMeshGetTotalIndexCount;
	da_NewtonMeshGetFaces NewtonMeshGetFaces;
	da_NewtonMeshGetPointCount NewtonMeshGetPointCount;
	da_NewtonMeshGetPointStrideInByte NewtonMeshGetPointStrideInByte;
	da_NewtonMeshGetPointArray NewtonMeshGetPointArray;
	da_NewtonMeshGetNormalArray NewtonMeshGetNormalArray;
	da_NewtonMeshGetUV0Array NewtonMeshGetUV0Array;
	da_NewtonMeshGetUV1Array NewtonMeshGetUV1Array;
	da_NewtonMeshGetVertexCount NewtonMeshGetVertexCount;
	da_NewtonMeshGetVertexStrideInByte NewtonMeshGetVertexStrideInByte;
	da_NewtonMeshGetVertexArray NewtonMeshGetVertexArray;
	da_NewtonMeshGetFirstVertex NewtonMeshGetFirstVertex;
	da_NewtonMeshGetNextVertex NewtonMeshGetNextVertex;
	da_NewtonMeshGetVertexIndex NewtonMeshGetVertexIndex;
	da_NewtonMeshGetFirstPoint NewtonMeshGetFirstPoint;
	da_NewtonMeshGetNextPoint NewtonMeshGetNextPoint;
	da_NewtonMeshGetPointIndex NewtonMeshGetPointIndex;
	da_NewtonMeshGetVertexIndexFromPoint NewtonMeshGetVertexIndexFromPoint;
	da_NewtonMeshGetFirstEdge NewtonMeshGetFirstEdge;
	da_NewtonMeshGetNextEdge NewtonMeshGetNextEdge;
	da_NewtonMeshGetEdgeIndices NewtonMeshGetEdgeIndices;
	da_NewtonMeshGetFirstFace NewtonMeshGetFirstFace;
	da_NewtonMeshGetNextFace NewtonMeshGetNextFace;
	da_NewtonMeshIsFaceOpen NewtonMeshIsFaceOpen;
	da_NewtonMeshGetFaceMaterial NewtonMeshGetFaceMaterial;
	da_NewtonMeshGetFaceIndexCount NewtonMeshGetFaceIndexCount;
	da_NewtonMeshGetFaceIndices NewtonMeshGetFaceIndices;
	da_NewtonMeshGetFacePointIndices NewtonMeshGetFacePointIndices;
	da_NewtonMeshCalculateFaceNormal NewtonMeshCalculateFaceNormal;
	da_NewtonMeshSetFaceMaterial NewtonMeshSetFaceMaterial;
}